name: CI/CD

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  CI-CD:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      # jdk 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      # Gradle Caching
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # create application.yml
      - name: Set .yml for main
        run: |
          # main 설정 파일 디렉토리로 이동
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION_SETTINGS }}" >> ./application.yml
        shell: bash

      # Save PRIVATE_KEY to file
      - name: Save Private Key
        run: |
          echo "${{ secrets.PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
        shell: bash

      # SSH Tunneling Setup
      - name: Set up SSH Tunnel
        run: |
          ssh -f -N -L 3306:${{ secrets.RDS_ENDPOINT }}:3306 -i private_key.pem ubuntu@${{ secrets.HOST }}

      # Build Gradle
      - name: Build Gradle
        run: ./gradlew build

      # SSH Tunnel Close
      - name: Close SSH Tunnel
        run: |
          ps -ef | grep "ssh -f -N -L 3306:${{ secrets.RDS_ENDPOINT }}:3306" | grep -v grep | awk '{print $2}' | xargs kill

      # Build Docker & Push to Production
      - name: Docker Build & push to Prod
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker buildx build --platform linux/amd64,linux/arm64 -t ${{ secrets.DOCKER_USERNAME }}/dway:latest --push . 

      # Deploy to Production
      - name: Deploy to Prod
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }}
          script: |
            docker rm -f $(docker ps -qa)
            docker rmi ${{ secrets.DOCKER_USERNAME }}/dway
            docker pull ${{ secrets.DOCKER_USERNAME }}/dway
            docker container run -d --name "dway" ${{ secrets.DOCKER_USERNAME }}/dway
